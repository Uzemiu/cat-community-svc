// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	"github.com/xh-polaris/cat-community-svc/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/user",
				Handler: GetUserDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user",
				Handler: UpdateUserDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/privilege",
				Handler: UpdateUserPrivilegeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admin",
				Handler: GetAdminDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/admin/list",
				Handler: GetAdminListHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/carousel/list",
				Handler: ListCarouselHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/cat",
				Handler: GetCatDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/cat/query",
				Handler: QueryCatDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/cat",
				Handler: UploadCatDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/comment/list",
				Handler: ListCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/comment",
				Handler: PostCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/moment",
				Handler: GetMomentDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/moment/query",
				Handler: QueryMomentDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/moment/upload",
				Handler: UploadMomentHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)
}
